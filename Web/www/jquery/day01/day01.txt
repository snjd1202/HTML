# JQuery

==> 자바스크립트를 기반으로 하여 자주 사용하는 기능을
	미리 만들어 놓아서(API를 하나 만들어 놓아서)
	이것을 이용해서 자바스크립트 작업을 조금 편하게 하도록 하는 
	자바 스크립트의 오픈 API의 일종이다.
	
	정리하면 자바스크립트를 조금 편하게 사용하도록 만든 함수들의 집합이다.
	
사용방법]

	1. 다운로드 후 사용하는 방법
		1) 일단 필요한 라이브러리 (jquery-3.5.0.min.js)를 다운 받은 후
			site : http://jquery.com/download/
		2) HTML 문서에 라이브러리를 받아서 사용하면 된다.
			<script type="text/javascript" src="경로/jquery-3.5.0.min.js"></script>
			
	2. CDN 네트워크에 접속해서 라이브러리를 받아서 사용하는 방법
		1) jquery 사이트에서 서버주소를 확인한다.
			서버주소는
				구글, 마이크로소프트, CDNJS, jsDelivr
			에서 제공하는 주소를 사용하면 된다.
		
		2) html 문서에 라이브러리를 추가해주면 된다.
			마이크로소프트 주소 사용하는 경우
			<script type="text/javascript" src="http://ajax.spnetcdn.com/ajax/jQuery/jquery-3.5.0.min.js"></script>
			
	참고]
		CDN 네트워크란?
			==> Content Delivery Network의 약자로
				각종 오픈 API를 무료로 사용할 수 있도록 공용화 된 네트워크를 말한다.
				
라이브러리가 설치가 되었으면 JQuery를 사용할 수 있다.

-------------------------------------------------------------------------------------------------------------------------------

jquery는 자바스크립트하고는 약간 형식이 다르다.

자바스크립트는 Property 위주이다.
따라서 필요한 기능은 함수를 만들고 필요할 때 함수를 호출해야 한다.

JQuery는 함수로 구성되어 있고, 이벤트 위주이다.
먼저 이벤트를 설치하고 필요한 함수를 추가하게 된다.

	JQuery의 기본문법
	
		$(요소).이벤트(function(){
		
		});
		
		예]
			모든 p 태그에 클릭 이벤트 등록하는 경우
			$('p').click(function(){
			
			});
			
참고]
	
	자바스크립트는 위치에 따라서 실행 순서가 달라진다.(위치에 영향을 많이 받는다.)
	즉, HTML과 자바스크립트가 같이 순서대로 실행되기 때문이다.
	
	jQuery는 위치에 관계없이
	모든 문서가 완성된 후(HTML이 먼저 실행된 후)
	JQurey가 실행되어진다.
	만약 html이 완성되기 전에 jquery가 먼저 실행되면 오류가 나게 된다.
	(<== 이벤트 단위로 설치 되기 때문에 
		요소가 존재해야 이벤트를 설치할 수 있기 때문다.)
		
	*****
	따라서 jQuery는 반드시 문서가 완성된 후 실행하도록 
	조치를 해줘야 한다.
	
	문서가 완성된 후 실행되는 이벤트는
	
		$(document).ready();
		
		<== jQuery(document).ready();
	
		***
		여기서 매번 jQuery라 적어주는 것이 길어서
		개발자들이 jQuery 대신에 약자를 별칭으로 지정해놓은 문자가 있는데
		그것이 $ 이다. 
		
		형식 2]
			$(function(){
				내용...
			});
			
-----------------------------------------------------------------------------------------------------------------------

Jquery는 요소에 이벤트를 설치한 후
필요한 함수를 추가하는 개념이다.
따라서 가장 중요한 것은 필요한 요소(태그)를 지정하는(선택하는) 방법이다.

	$(요소).이벤트(function(){});
	
	1) 태그이름으로 요소를 선택하는 방법
		
		$('태그이름')
		
	2) ID로 요소를 선택하는 방법
	
		$('#아이디')
		
	3) Class로 요소를 선택하는 방법
		
		$('.클래스이름')
		
	참고]
		보조적으로 사용하는 요소 선택자 
			
			$('*')	==> 모든 요소 선택
			$(this)	==> 이벤트가 발생한 요소
			
			
		혼합형 요소 선택자
			
			$('p.intro')	==> p 태그 중 클래스가 intro 인 태그
			$('div#d1')		==> div 태그 중 아이디가 d1인 태그
			$('div p')		==> div 태그 하위의 모든 p 태그
			$('div > p')	==> div 태그의 자식 태그인 p태그
			$('div , p')	==> div 태그와 p태그	
			
			
		속성형 요소 선택자
		
			$('[속성]')		==> 지정한 속성을 가지고 있는 요소를 선택
			
				예]
					
					<a href="">
					<a>abcd</a>
					
					==>
					$('[href]')
					
		속성 값으로 선택하는 선택자
			$('[속성="속성값"]')	==> 지정한 속성이 지정한 속성값을 가지고 있는 태그
			
				예]
					<a href="a.html">a 페이지</a>
					<a href="b.html">b페이지</a>
					
					a페이지 태그 선택하는 방법
					
					$('[href="a.html"]')